use crate::cpu::Cpu;
use crate::memory::Memory;
use super::Op;

mod bit;

pub fn execute(memory: &mut Memory, cpu: &mut Cpu) {
    // CB 1 4 - - - -
    cpu.increment_program_counter();
    cpu.clock_cycles(4);

    let instruction = memory.read_byte(cpu.program_counter());
    let (name, function) = INSTRUCTIONS[instruction as usize];

    println!("[${:04X}] 0x{:02X} {}", cpu.program_counter(), instruction, name);
    (function)(memory, cpu);
}

const INSTRUCTIONS: [(&str, Op); 256] = [
    // 0x0x
    unimpl_opcode!(0x00 RLC B28Z 0 0 C),
    unimpl_opcode!(0x01 RLC C28Z 0 0 C),
    unimpl_opcode!(0x02 RLC D28Z 0 0 C),
    unimpl_opcode!(0x03 RLC E28Z 0 0 C),
    unimpl_opcode!(0x04 RLC H28Z 0 0 C),
    unimpl_opcode!(0x05 RLC L28Z 0 0 C),
    unimpl_opcode!(0x06 RLC (HL)216Z 0 0 C),
    unimpl_opcode!(0x07 RLC A28Z 0 0 C),
    unimpl_opcode!(0x08 RRC B28Z 0 0 C),
    unimpl_opcode!(0x09 RRC C28Z 0 0 C),
    unimpl_opcode!(0x0A RRC D28Z 0 0 C),
    unimpl_opcode!(0x0B RRC E28Z 0 0 C),
    unimpl_opcode!(0x0C RRC H28Z 0 0 C),
    unimpl_opcode!(0x0D RRC L28Z 0 0 C),
    unimpl_opcode!(0x0E RRC (HL)216Z 0 0 C),
    unimpl_opcode!(0x0F RRC A28Z 0 0 C),

    // 0x1x
    unimpl_opcode!(0x10 RL B28Z 0 0 C),
    unimpl_opcode!(0x11 RL C28Z 0 0 C),
    unimpl_opcode!(0x12 RL D28Z 0 0 C),
    unimpl_opcode!(0x13 RL E28Z 0 0 C),
    unimpl_opcode!(0x14 RL H28Z 0 0 C),
    unimpl_opcode!(0x15 RL L28Z 0 0 C),
    unimpl_opcode!(0x16 RL (HL)216Z 0 0 C),
    unimpl_opcode!(0x17 RL A28Z 0 0 C),
    unimpl_opcode!(0x18 RR B28Z 0 0 C),
    unimpl_opcode!(0x19 RR C28Z 0 0 C),
    unimpl_opcode!(0x1A RR D28Z 0 0 C),
    unimpl_opcode!(0x1B RR E28Z 0 0 C),
    unimpl_opcode!(0x1C RR H28Z 0 0 C),
    unimpl_opcode!(0x1D RR L28Z 0 0 C),
    unimpl_opcode!(0x1E RR (HL)216Z 0 0 C),
    unimpl_opcode!(0x1F RR A28Z 0 0 C),

    // 0x2x
    unimpl_opcode!(0x20 SLA B28Z 0 0 C),
    unimpl_opcode!(0x21 SLA C28Z 0 0 C),
    unimpl_opcode!(0x22 SLA D28Z 0 0 C),
    unimpl_opcode!(0x23 SLA E28Z 0 0 C),
    unimpl_opcode!(0x24 SLA H28Z 0 0 C),
    unimpl_opcode!(0x25 SLA L28Z 0 0 C),
    unimpl_opcode!(0x26 SLA (HL)216Z 0 0 C),
    unimpl_opcode!(0x27 SLA A28Z 0 0 C),
    unimpl_opcode!(0x28 SRA B28Z 0 0 0),
    unimpl_opcode!(0x29 SRA C28Z 0 0 0),
    unimpl_opcode!(0x2A SRA D28Z 0 0 0),
    unimpl_opcode!(0x2B SRA E28Z 0 0 0),
    unimpl_opcode!(0x2C SRA H28Z 0 0 0),
    unimpl_opcode!(0x2D SRA L28Z 0 0 0),
    unimpl_opcode!(0x2E SRA (HL)216Z 0 0 0),
    unimpl_opcode!(0x2F SRA A28Z 0 0 0),

    // 0x3x
    unimpl_opcode!(0x30 SWAP B28Z 0 0 0),
    unimpl_opcode!(0x31 SWAP C28Z 0 0 0),
    unimpl_opcode!(0x32 SWAP D28Z 0 0 0),
    unimpl_opcode!(0x33 SWAP E28Z 0 0 0),
    unimpl_opcode!(0x34 SWAP H28Z 0 0 0),
    unimpl_opcode!(0x35 SWAP L28Z 0 0 0),
    unimpl_opcode!(0x36 SWAP (HL)216Z 0 0 0),
    unimpl_opcode!(0x37 SWAP A28Z 0 0 0),
    unimpl_opcode!(0x38 SRL B28Z 0 0 C),
    unimpl_opcode!(0x39 SRL C28Z 0 0 C),
    unimpl_opcode!(0x3A SRL D28Z 0 0 C),
    unimpl_opcode!(0x3B SRL E28Z 0 0 C),
    unimpl_opcode!(0x3C SRL H28Z 0 0 C),
    unimpl_opcode!(0x3D SRL L28Z 0 0 C),
    unimpl_opcode!(0x3E SRL (HL)216Z 0 0 C),
    unimpl_opcode!(0x3F SRL A28Z 0 0 C),

    // 0x4x
    unimpl_opcode!(0x40 BIT 0,B28Z 0 1 -),
    unimpl_opcode!(0x41 BIT 0,C28Z 0 1 -),
    unimpl_opcode!(0x42 BIT 0,D28Z 0 1 -),
    unimpl_opcode!(0x43 BIT 0,E28Z 0 1 -),
    unimpl_opcode!(0x44 BIT 0,H28Z 0 1 -),
    unimpl_opcode!(0x45 BIT 0,L28Z 0 1 -),
    unimpl_opcode!(0x46 BIT 0,(HL)216Z 0 1 -),
    unimpl_opcode!(0x47 BIT 0,A28Z 0 1 -),
    unimpl_opcode!(0x48 BIT 1,B28Z 0 1 -),
    unimpl_opcode!(0x49 BIT 1,C28Z 0 1 -),
    unimpl_opcode!(0x4A BIT 1,D28Z 0 1 -),
    unimpl_opcode!(0x4B BIT 1,E28Z 0 1 -),
    unimpl_opcode!(0x4C BIT 1,H28Z 0 1 -),
    unimpl_opcode!(0x4D BIT 1,L28Z 0 1 -),
    unimpl_opcode!(0x4E BIT 1,(HL)216Z 0 1 -),
    unimpl_opcode!(0x4F BIT 1,A28Z 0 1 -),

    // 0x5x
    unimpl_opcode!(0x50 BIT 2,B28Z 0 1 -),
    unimpl_opcode!(0x51 BIT 2,C28Z 0 1 -),
    unimpl_opcode!(0x52 BIT 2,D28Z 0 1 -),
    unimpl_opcode!(0x53 BIT 2,E28Z 0 1 -),
    unimpl_opcode!(0x54 BIT 2,H28Z 0 1 -),
    unimpl_opcode!(0x55 BIT 2,L28Z 0 1 -),
    unimpl_opcode!(0x56 BIT 2,(HL)216Z 0 1 -),
    unimpl_opcode!(0x57 BIT 2,A28Z 0 1 -),
    unimpl_opcode!(0x58 BIT 3,B28Z 0 1 -),
    unimpl_opcode!(0x59 BIT 3,C28Z 0 1 -),
    unimpl_opcode!(0x5A BIT 3,D28Z 0 1 -),
    unimpl_opcode!(0x5B BIT 3,E28Z 0 1 -),
    unimpl_opcode!(0x5C BIT 3,H28Z 0 1 -),
    unimpl_opcode!(0x5D BIT 3,L28Z 0 1 -),
    unimpl_opcode!(0x5E BIT 3,(HL)216Z 0 1 -),
    unimpl_opcode!(0x5F BIT 3,A28Z 0 1 -),

    // 0x6x
    unimpl_opcode!(0x60 BIT 4,B28Z 0 1 -),
    unimpl_opcode!(0x61 BIT 4,C28Z 0 1 -),
    unimpl_opcode!(0x62 BIT 4,D28Z 0 1 -),
    unimpl_opcode!(0x63 BIT 4,E28Z 0 1 -),
    unimpl_opcode!(0x64 BIT 4,H28Z 0 1 -),
    unimpl_opcode!(0x65 BIT 4,L28Z 0 1 -),
    unimpl_opcode!(0x66 BIT 4,(HL)216Z 0 1 -),
    unimpl_opcode!(0x67 BIT 4,A28Z 0 1 -),
    unimpl_opcode!(0x68 BIT 5,B28Z 0 1 -),
    unimpl_opcode!(0x69 BIT 5,C28Z 0 1 -),
    unimpl_opcode!(0x6A BIT 5,D28Z 0 1 -),
    unimpl_opcode!(0x6B BIT 5,E28Z 0 1 -),
    unimpl_opcode!(0x6C BIT 5,H28Z 0 1 -),
    unimpl_opcode!(0x6D BIT 5,L28Z 0 1 -),
    unimpl_opcode!(0x6E BIT 5,(HL)216Z 0 1 -),
    unimpl_opcode!(0x6F BIT 5,A28Z 0 1 -),

    // 0x7x
    unimpl_opcode!(0x70 BIT 6,B28Z 0 1 -),
    unimpl_opcode!(0x71 BIT 6,C28Z 0 1 -),
    unimpl_opcode!(0x72 BIT 6,D28Z 0 1 -),
    unimpl_opcode!(0x73 BIT 6,E28Z 0 1 -),
    unimpl_opcode!(0x74 BIT 6,H28Z 0 1 -),
    unimpl_opcode!(0x75 BIT 6,L28Z 0 1 -),
    unimpl_opcode!(0x76 BIT 6,(HL)216Z 0 1 -),
    unimpl_opcode!(0x77 BIT 6,A28Z 0 1 -),
    unimpl_opcode!(0x78 BIT 7,B28Z 0 1 -),
    unimpl_opcode!(0x79 BIT 7,C28Z 0 1 -),
    unimpl_opcode!(0x7A BIT 7,D28Z 0 1 -),
    unimpl_opcode!(0x7B BIT 7,E28Z 0 1 -),
    ("BIT 7,H", bit::bit_7_h),
    unimpl_opcode!(0x7D BIT 7,L28Z 0 1 -),
    unimpl_opcode!(0x7E BIT 7,(HL)216Z 0 1 -),
    unimpl_opcode!(0x7F BIT 7,A28Z 0 1 -),

    // 0x8x
    unimpl_opcode!(0x80 RES 0,B28- - - -),
    unimpl_opcode!(0x81 RES 0,C28- - - -),
    unimpl_opcode!(0x82 RES 0,D28- - - -),
    unimpl_opcode!(0x83 RES 0,E28- - - -),
    unimpl_opcode!(0x84 RES 0,H28- - - -),
    unimpl_opcode!(0x85 RES 0,L28- - - -),
    unimpl_opcode!(0x86 RES 0,(HL)216- - - -),
    unimpl_opcode!(0x87 RES 0,A28- - - -),
    unimpl_opcode!(0x88 RES 1,B28- - - -),
    unimpl_opcode!(0x89 RES 1,C28- - - -),
    unimpl_opcode!(0x8A RES 1,D28- - - -),
    unimpl_opcode!(0x8B RES 1,E28- - - -),
    unimpl_opcode!(0x8C RES 1,H28- - - -),
    unimpl_opcode!(0x8D RES 1,L28- - - -),
    unimpl_opcode!(0x8E RES 1,(HL)216- - - -),
    unimpl_opcode!(0x8F RES 1,A28- - - -),

    // 0x9x
    unimpl_opcode!(0x90 RES 2,B28- - - -),
    unimpl_opcode!(0x91 RES 2,C28- - - -),
    unimpl_opcode!(0x92 RES 2,D28- - - -),
    unimpl_opcode!(0x93 RES 2,E28- - - -),
    unimpl_opcode!(0x94 RES 2,H28- - - -),
    unimpl_opcode!(0x95 RES 2,L28- - - -),
    unimpl_opcode!(0x96 RES 2,(HL)216- - - -),
    unimpl_opcode!(0x97 RES 2,A28- - - -),
    unimpl_opcode!(0x98 RES 3,B28- - - -),
    unimpl_opcode!(0x99 RES 3,C28- - - -),
    unimpl_opcode!(0x9A RES 3,D28- - - -),
    unimpl_opcode!(0x9B RES 3,E28- - - -),
    unimpl_opcode!(0x9C RES 3,H28- - - -),
    unimpl_opcode!(0x9D RES 3,L28- - - -),
    unimpl_opcode!(0x9E RES 3,(HL)216- - - -),
    unimpl_opcode!(0x9F RES 3,A28- - - -),

    // 0xAx
    unimpl_opcode!(0xA0 RES 4,B28- - - -),
    unimpl_opcode!(0xA1 RES 4,C28- - - -),
    unimpl_opcode!(0xA2 RES 4,D28- - - -),
    unimpl_opcode!(0xA3 RES 4,E28- - - -),
    unimpl_opcode!(0xA4 RES 4,H28- - - -),
    unimpl_opcode!(0xA5 RES 4,L28- - - -),
    unimpl_opcode!(0xA6 RES 4,(HL)216- - - -),
    unimpl_opcode!(0xA7 RES 4,A28- - - -),
    unimpl_opcode!(0xA8 RES 5,B28- - - -),
    unimpl_opcode!(0xA9 RES 5,C28- - - -),
    unimpl_opcode!(0xAA RES 5,D28- - - -),
    unimpl_opcode!(0xAB RES 5,E28- - - -),
    unimpl_opcode!(0xAC RES 5,H28- - - -),
    unimpl_opcode!(0xAD RES 5,L28- - - -),
    unimpl_opcode!(0xAE RES 5,(HL)216- - - -),
    unimpl_opcode!(0xAF RES 5,A28- - - -),

    // 0xBx
    unimpl_opcode!(0xB0 RES 6,B28- - - -),
    unimpl_opcode!(0xB1 RES 6,C28- - - -),
    unimpl_opcode!(0xB2 RES 6,D28- - - -),
    unimpl_opcode!(0xB3 RES 6,E28- - - -),
    unimpl_opcode!(0xB4 RES 6,H28- - - -),
    unimpl_opcode!(0xB5 RES 6,L28- - - -),
    unimpl_opcode!(0xB6 RES 6,(HL)216- - - -),
    unimpl_opcode!(0xB7 RES 6,A28- - - -),
    unimpl_opcode!(0xB8 RES 7,B28- - - -),
    unimpl_opcode!(0xB9 RES 7,C28- - - -),
    unimpl_opcode!(0xBA RES 7,D28- - - -),
    unimpl_opcode!(0xBB RES 7,E28- - - -),
    unimpl_opcode!(0xBC RES 7,H28- - - -),
    unimpl_opcode!(0xBD RES 7,L28- - - -),
    unimpl_opcode!(0xBE RES 7,(HL)216- - - -),
    unimpl_opcode!(0xBF RES 7,A28- - - -),

    // 0xCx
    unimpl_opcode!(0xC0 SET 0,B28- - - -),
    unimpl_opcode!(0xC1 SET 0,C28- - - -),
    unimpl_opcode!(0xC2 SET 0,D28- - - -),
    unimpl_opcode!(0xC3 SET 0,E28- - - -),
    unimpl_opcode!(0xC4 SET 0,H28- - - -),
    unimpl_opcode!(0xC5 SET 0,L28- - - -),
    unimpl_opcode!(0xC6 SET 0,(HL)216- - - -),
    unimpl_opcode!(0xC7 SET 0,A28- - - -),
    unimpl_opcode!(0xC8 SET 1,B28- - - -),
    unimpl_opcode!(0xC9 SET 1,C28- - - -),
    unimpl_opcode!(0xCA SET 1,D28- - - -),
    unimpl_opcode!(0xCB SET 1,E28- - - -),
    unimpl_opcode!(0xCC SET 1,H28- - - -),
    unimpl_opcode!(0xCD SET 1,L28- - - -),
    unimpl_opcode!(0xCE SET 1,(HL)216- - - -),
    unimpl_opcode!(0xCF SET 1,A28- - - -),

    // 0xDx
    unimpl_opcode!(0xD0 SET 2,B28- - - -),
    unimpl_opcode!(0xD1 SET 2,C28- - - -),
    unimpl_opcode!(0xD2 SET 2,D28- - - -),
    unimpl_opcode!(0xD3 SET 2,E28- - - -),
    unimpl_opcode!(0xD4 SET 2,H28- - - -),
    unimpl_opcode!(0xD5 SET 2,L28- - - -),
    unimpl_opcode!(0xD6 SET 2,(HL)216- - - -),
    unimpl_opcode!(0xD7 SET 2,A28- - - -),
    unimpl_opcode!(0xD8 SET 3,B28- - - -),
    unimpl_opcode!(0xD9 SET 3,C28- - - -),
    unimpl_opcode!(0xDA SET 3,D28- - - -),
    unimpl_opcode!(0xDB SET 3,E28- - - -),
    unimpl_opcode!(0xDC SET 3,H28- - - -),
    unimpl_opcode!(0xDD SET 3,L28- - - -),
    unimpl_opcode!(0xDE SET 3,(HL)216- - - -),
    unimpl_opcode!(0xDF SET 3,A28- - - -),

    // 0xEx
    unimpl_opcode!(0xE0 SET 4,B28- - - -),
    unimpl_opcode!(0xE1 SET 4,C28- - - -),
    unimpl_opcode!(0xE2 SET 4,D28- - - -),
    unimpl_opcode!(0xE3 SET 4,E28- - - -),
    unimpl_opcode!(0xE4 SET 4,H28- - - -),
    unimpl_opcode!(0xE5 SET 4,L28- - - -),
    unimpl_opcode!(0xE6 SET 4,(HL)216- - - -),
    unimpl_opcode!(0xE7 SET 4,A28- - - -),
    unimpl_opcode!(0xE8 SET 5,B28- - - -),
    unimpl_opcode!(0xE9 SET 5,C28- - - -),
    unimpl_opcode!(0xEA SET 5,D28- - - -),
    unimpl_opcode!(0xEB SET 5,E28- - - -),
    unimpl_opcode!(0xEC SET 5,H28- - - -),
    unimpl_opcode!(0xED SET 5,L28- - - -),
    unimpl_opcode!(0xEE SET 5,(HL)216- - - -),
    unimpl_opcode!(0xEF SET 5,A28- - - -),

    // 0xFx
    unimpl_opcode!(0xF0 SET 6,B28- - - -),
    unimpl_opcode!(0xF1 SET 6,C28- - - -),
    unimpl_opcode!(0xF2 SET 6,D28- - - -),
    unimpl_opcode!(0xF3 SET 6,E28- - - -),
    unimpl_opcode!(0xF4 SET 6,H28- - - -),
    unimpl_opcode!(0xF5 SET 6,L28- - - -),
    unimpl_opcode!(0xF6 SET 6,(HL)216- - - -),
    unimpl_opcode!(0xF7 SET 6,A28- - - -),
    unimpl_opcode!(0xF8 SET 7,B28- - - -),
    unimpl_opcode!(0xF9 SET 7,C28- - - -),
    unimpl_opcode!(0xFA SET 7,D28- - - -),
    unimpl_opcode!(0xFB SET 7,E28- - - -),
    unimpl_opcode!(0xFC SET 7,H28- - - -),
    unimpl_opcode!(0xFD SET 7,L28- - - -),
    unimpl_opcode!(0xFE SET 7,(HL)216- - - -),
    unimpl_opcode!(0xFF SET 7,A28- - - -),


];

